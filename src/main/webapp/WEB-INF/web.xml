<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/root-context.xml</param-value>
    </context-param>

    <!-- Spring MVC filters -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>LoggingRequestResponseFilter</filter-name>
        <filter-class>com.pb.util.bpn.ws.logging.HttpServletRequestResponseLoggingFilter</filter-class>
        <init-param>
            <param-name>useMessageSeparator</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>hidePassword</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>LoggingRequestResponseFilter</filter-name>
        <!-- <url-pattern>/*</url-pattern> -->
        <url-pattern>/webhook/*</url-pattern>
        <url-pattern>/update</url-pattern>
        <url-pattern>/channels/*</url-pattern>
        <url-pattern>/facebook/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>TelegramRequestFilter</filter-name>
        <filter-class>com.pb.tel.filter.TelegramRequestFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>TelegramRequestFilter</filter-name>
        <url-pattern>/update</url-pattern>
    </filter-mapping>

    <!--filter>
        <filter-name>FaceBookRequestFilter</filter-name>
        <filter-class>com.pb.tel.filter.FaceBookRequestFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>FaceBookRequestFilter</filter-name>
        <url-pattern>/facebook/*</url-pattern>
    </filter-mapping-->



    <!-- Creates the Spring Container shared by all Servlets and Filters -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!-- Processes application requests -->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- This is for variant htmlViewResolver - create a jsp servlet for html. Alternative variant - use <default-servlet-handler/> in servlet-context
    <servlet>
	    <servlet-name>htmlServlet</servlet-name>
	    <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
	    <load-on-startup>3</load-on-startup>
	</servlet>

	<servlet-mapping>
	    <servlet-name>htmlServlet</servlet-name>
	    <url-pattern>*.html</url-pattern>
	</servlet-mapping> -->

    <session-config>
        <session-timeout>3</session-timeout>
        <tracking-mode>COOKIE</tracking-mode>
    </session-config>

</web-app>

plugins {
    id 'war'
    id 'org.akhikhl.gretty' version '2.0.0'
}

dependencies {
    compile "org.hibernate:hibernate-entitymanager:5.2.10.Final", withoutLog
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final", withoutLog
    compile "org.hibernate:hibernate-validator:5.4.1.Final", withoutLog
    compile "org.hibernate:hibernate-ehcache:5.3.6.Final", withoutLog

//    compile "javax:javaee-web-api:8.0", withoutLog

    compile "org.springframework:spring-orm", withoutLog
    compile "org.springframework:spring-oxm", withoutLog
    compile "org.springframework:spring-context", withoutLog
    compile "org.springframework:spring-webmvc", withoutLog
    compile "org.springframework:spring-websocket", withoutLog
    compile "org.springframework:spring-context-support", withoutLog
    compile "org.springframework.data:spring-data-redis:2.1.1.RELEASE", withoutLog
    compile "org.springframework.data:spring-data-redis", withoutLog
    compile "org.springframework:spring-messaging", withoutLog

    compile "org.springframework.security:spring-security-core", withoutLog
    compile "org.springframework.security:spring-security-config", withoutLog
    compile "org.springframework.security:spring-security-web", withoutLog

    compile "org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE", withoutLog

    compile "com.fasterxml.jackson.core:jackson-core:2.9.0.pr2", withoutLog
    compile "com.fasterxml.jackson.core:jackson-annotations:2.9.0.pr2", withoutLog
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.0.pr2", withoutLog
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", withoutLog

    compile fileTree(dir: 'libs', include: '*.jar')
    compile "commons-io:commons-io:2.6", withoutLog
    compile "org.apache.httpcomponents:httpmime:4.5.3", withoutLog
    compile "io.jsonwebtoken:jjwt:0.9.0", withoutLog
    compile "com.auth0:java-jwt:3.3.0", withoutLog
    compile "junit:junit:4.12", withoutLog
    compile "redis.clients:jedis:2.9.0", withoutLog
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7', withoutLog
    compile group: 'org.apache.tomcat', name: 'juli', version: '6.0.26', withoutLog
    compile "com.mchange:c3p0:0.9.5.2"
    compile 'com.zaxxer:HikariCP:2.6.1', withoutLog
    compile "net.sf.ehcache:ehcache-core:2.6.11", withoutLog
    compile "org.postgresql:postgresql:42.2.5", withoutLog

    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.8.0-beta2', withoutLog
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2', withoutLog
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0', withoutLog
}

war {
    archiveName = project.name +".war"
}

remotes {
    webPoligon {
        //role 'masterNode'
        host = '10.56.2.228'
        user = 'sybase'
        identity = file(getProperty('ssh.key.path'))
        //password='Un1W1n123'
    }
}


task deployToTomcat {
//    def tomcatHome = getProperty('tomcat.path')
//    def warName = project.name
//    doLast {
//        ssh.run {
//            session(remotes.webPoligon) {
//
//                def date = new Date().getTime()
//                def stop = "${tomcatHome}/bin/stop.sh"
//                def createFolders = "${tomcatHome}/bin/createFolders.sh"
//                def run = "${tomcatHome}/bin/startup.sh"
//                println "######################## Start uploading new war to Tomcat ########################"
//                execute stop
//                remove "${tomcatHome}/webapps/${warName}.war", "${tomcatHome}/webapps/${warName}", "${tomcatHome}/applogs", "${tomcatHome}/logs"
//                execute createFolders
//                put from: war.archivePath.absolutePath, into: "${tomcatHome}/webapps/${warName}.war"
//                execute run
//                println "######################## Finish uploading new war to Tomcat at "+(new Date().getTime() - date)+" ms ########################"
//            }
//        }
//    }
}

deployToTomcat.dependsOn.add(war)
install.dependsOn.add(deployToTomcat)


gretty {
    // httpPort = 8081
    // contextPath = '/MyWebApp'
    servletContainer='tomcat8'
    // httpsEnabled=true
    // ... many more properties
}


